BACI System: BenAri Pascal PCODE Compiler, 12:29  18 Jul 2004
Source file: C:\Users\bu0532\jbaci\examples\test.pm  Thu Jun 20 10:37:23 2024
 line  pc
   1    0  program ProducerConsumer;
   2    0  monitor PC;
   3    0  const N = 5;
   4    0  var Oldest: integer;
   5    0  	Newest:integer;
   6    0  	Count: integer;
   7    0  	NotEmpty: Condition;
   8    0  	NotFull: Condition;
   9    0  	Buffer: array[0..N] of integer;
  10    0  
  11    0  procedure Append(V: integer);
  12    0  begin
  13    1  	if Count = N then
  14    5  		WaitC(NotFull);
  15    8  		Buffer[Newest] := V;
  16   13  		Newest := (Newest + 1) mod N;
  17   20  		Count := Count + 1;
  18   25  		SignalC(NotEmpty);
  19   27  end;
  20   29  
  21   29  procedure Take(var V: Integer);
  22   29  begin
  23   30  	if Count = 0 then
  24   34  	begin
  25   34  		WaitC(NotEmpty);
  26   37  		V := Buffer[Oldest];
  27   43  		Oldest := (Oldest + 1) mod N;
  28   50  		Count := Count - 1;
  29   55  		SignalC(NotFull);
  30   57  	end;
  31   57  end;
  32   59  
  33   59  begin
  34   59  	Count := 0; Oldest := 0; Newest := 0;
  35   68  end;
  36   69  
  37   69  VAR output: BINARYSEM;
  38   69  const Values = 20;
  39   69  
  40   69  procedure Producer(ID: integer);
  41   69  var I: integer;
  42   69  begin
  43   69  	for I := 1 to Values do
  44   73  	begin
  45   73  		WAIT (output);
  46   75  			writeln ("Producer ", ID, " producing ", ID*100+I);
  47   86  		SIGNAL (output);
  48   88  		Append(ID*100+I);
  49   96  	end;
  50   97  end;
  51   98  
  52   98  procedure Consumer(ID: integer);
  53   98  var I, J: integer;
  54   98  begin
  55   98  	for I := 1 to 10 do
  56  102  	begin
  57  102  		Take(J);
  58  106  		WAIT (output);
  59  108  			writeln ("Consumer ", ID, " consuming ", J);
  60  115  		SIGNAL (output);
  61  117  	end;
  62  118  end;
  63  119  
  64  119  begin
  65  120  	INITIALSEM (output, 1);
  66  123  	cobegin
  67  124  		Producer(1); Consumer(1); Consumer(2);
  68  133  	coend;
  69  134  end.
